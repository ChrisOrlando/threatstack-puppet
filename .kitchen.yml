---
driver:
  name: docker

provisioner:
  name: puppet_apply
  modules_path: modules
  manifests_path: manifests
  ignore_spec_fixtures: true
  <% if ENV['PUPPET3'] != nil %>
  require_puppet_collections: false
  <% else %>
  require_puppet_collections: true
  <% end %>
  custom_facts:
    ts_deploy_key: <%= ENV['TS_DEPLOY_KEY'] != nil ? ENV['TS_DEPLOY_KEY'] : 'ts_deploy_key' %>
    ts_feature_plan: <%= ENV['TS_FEATURE_PLAN'] != nil ? ENV['TS_FEATURE_PLAN'] : 'monitor' %>
    <% if ENV['TS_CONFIG_ARGS'] != nil %>
    ts_config_args: <%= ENV['TS_CONFIG_ARGS'] %>
    <% end %>
    <% if ENV['TS_PACKAGE_VERSION'] != nil %>
    ts_package_version: <%= ENV['TS_PACKAGE_VERSION'] %>
    <% end %>

transport:
  name: ssh
  max_ssh_sessions: 1

platforms:
  - name: amazon-1
    driver_config:
      image: amazonlinux:1
      platform: amazonlinux
      run_command: /sbin/init
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - chkconfig auditd on
  - name: amazon-2
    driver_config:
      image: amazonlinux:2
      platform: amazonlinux
      run_command: /sbin/init
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - systemctl enable auditd.service
  - name: centos-7
    driver_config:
      image: centos:7
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - systemctl enable auditd.service
  - name: centos-8
    driver_config:
      image: centos:8
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - systemctl enable auditd.service
  - name: centos-8-arm
    provisioner:
      puppet_yum_collections_repo: https://yum.puppet.com/puppet/puppet-release-el-8.noarch.rpm
    driver_config:
      image: arm64v8/centos:8
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      privileged: true
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - yum install -y audit initscripts
        - sed -i 's/local_events = yes/local_events = no/g' /etc/audit/auditd.conf
        - systemctl enable auditd.service
  - name: debian-8
    driver_config:
      image: debian:8
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: debian-9
    provisioner:
      puppet_apt_collections_repo: http://apt.puppetlabs.com/puppet7-release-stretch.deb
    driver_config:
      image: debian:9
      run_command: /bin/systemd
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: debian-10
    driver_config:
      image: debian:10
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-16.04
    driver_config:
      image: ubuntu:16.04
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-18.04
    driver_config:
      image: ubuntu:18.04
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-20.04
    provisioner:
      puppet_apt_collections_repo: https://apt.puppetlabs.com/puppet7-release-focal.deb
    driver_config:
      image: ubuntu:20.04
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-20.04-arm
    provisioner:
      puppet_apt_collections_repo: https://apt.puppetlabs.com/puppet7-release-focal.deb
    driver_config:
      image: arm64v8/ubuntu:20.04
      run_command: /sbin/init
      cap_add:
        - SYS_ADMIN
      run_options:
        env: container=docker
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service

suites:
  - name: default
    provisioner:
      manifest: site.pp
  - name: custom
    provisioner:
      manifest: site.pp
      facter_file: test/data/test_custom_fact.rb
